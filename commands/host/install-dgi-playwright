#!/bin/bash
#ddev-generated

ENV_FILE=".ddev/.env.dgi-playwright"

if ! [ "$(ddev dotenv get $ENV_FILE --composer-installed 2> /dev/null)" == "true" ] ; then
  # Add base .gitignore
  mkdir -p $DDEV_APPROOT/test
  echo "playwright" >> $DDEV_APPROOT/test/.gitignore
  echo "playwright-tests" >> $DDEV_APPROOT/test/.gitignore

  # Adding the new dgi-playwright-tests installer type and path
  ddev composer require --no-update "oomphinc/composer-installers-extender:^2.0"
  ddev composer config --merge --json -- extra.installer-types '["dgi-playwright-core", "dgi-playwright-tests"]'
  ddev composer config --merge --json -- extra.installer-paths.test/playwright '["type:dgi-playwright-core"]'
  ddev composer config --merge --json -- 'extra.installer-paths.test/playwright-tests/{$name}' '["type:dgi-playwright-tests"]'

  # Installing the new basic playwright tests
  ddev composer require --dev --no-update \
    "discoverygarden/playwright-testing-core:^1" \
    "discoverygarden/playwright-testing-sample-tests:^1"

  ddev composer update oomphinc/composer-installers-extender \
    discoverygarden/playwright-testing-core \
    discoverygarden/playwright-testing-sample-tests

  ddev dotenv set $ENV_FILE --composer-installed true
fi

if ! diff -q $DDEV_APPROOT/.ddev/web-build/disabled.Dockerfile.playwright $DDEV_APPROOT/.ddev/web-build/Dockerfile.playwright ; then
  # ddev errors out on subsequent builds if we symlink these files. Instead, we
  # copy them each time.
  echo "Rebuilding web service with playwright dependencies..."
  cp $DDEV_APPROOT/.ddev/web-build/disabled.Dockerfile.playwright $DDEV_APPROOT/.ddev/web-build/Dockerfile.playwright
  ddev restart
fi
